package o1.auctionhouse

object DutchAuctionTest extends App {
/*
  val da1 = new DutchAuction("kuvaus", 100, 1, 99)
  println("day0")
  println("price:"+da1.price)
  da1.advanceOneDay()
  println("day1")
  println("state:"+da1.state)
  println("buyer:"+da1.buyer)
  println("isOpen:"+da1.isOpen)
  println("price:"+da1.price)
  println("isExpired:"+da1.isExpired)
  da1.advanceOneDay()
  println("day2")
  println("state:"+da1.state)  
  println("buyer:"+da1.buyer)
  println("isOpen:"+da1.isOpen)
  println("price:"+da1.price)
  println("isExpired:"+da1.isExpired)
  
  println("\nDay3")
  da1.advanceOneDay()
  println("state:"+da1.state)  
  println("\nDay4\n")
  da1.advanceOneDay()
  println("state:"+da1.state)
  println("\nDay5\n")
  da1.advanceOneDay()
  println("state:"+da1.state)
  println("\nDay6\n")
  da1.advanceOneDay()
  println("state:"+da1.state)
  println("\nDay7\n")
  da1.advanceOneDay()
  println("state:"+da1.state)
  println("\nDay8\n")
  da1.advanceOneDay()
  println("state:"+da1.state)
  println("\nDay9\n")
  da1.advanceOneDay()
  println("state:"+da1.state)    
  println("\nDay10\n")
  da1.advanceOneDay()
  println("state:"+da1.state)    
  * 
  */
  val da2 = new DutchAuction("Ticket", 50, 10, 20)
  da2.advanceOneDay()
  da2.advanceOneDay()
  da2.advanceOneDay()
  da2.advanceOneDay()
  da2.advanceOneDay()
  da2.advanceOneDay()
  //da2.advanceOneDay()
 
  println(da2.isExpired)
  
}



















